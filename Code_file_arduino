#include <SoftwareSerial.h>
//Create software serial object to communicate with SIM800L
//declaring ports for gsm
SoftwareSerial mySerial(3, 2);  //SIM800L Tx & Rx is connected to Arduino #3 & #2
//declaring ports for pir sensor
int led = 12;                // the pin that the LED is atteched to
int sensor = 4;              // the pin that the sensor is atteched to
int state = LOW;             // by default, no motion detected
int val = 0;                 // variable to store the sensor status (value)
//declaring ports for ldr sensor
const int ledPin = 13;
const int ldrPin = A0;
//ringing the buzzer
const int buzzer = 9; 

void setup() {
  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)
  Serial.begin(9600);
  pir_init();  
  ldr_init();
}

void loop(){
 
  int ldrStatus = analogRead(ldrPin);
  if (ldrStatus <= 200) {

  digitalWrite(ledPin, HIGH);
  Serial.print("Its DARK, Turn on the LED : ");
  Serial.println(ldrStatus);
  delay(5000);

  }else {

  digitalWrite(ledPin, LOW);

  Serial.print("Its BRIGHT, Turn off the LED : ");

  Serial.println(ldrStatus);
  delay(5000);
}
  pir();
 //buzzer_on();
}

void gsm() {  

  //Begin serial communication with Arduino and SIM800L
  mySerial.begin(9600);

  Serial.println("Initializing...");
  delay(1000);

  mySerial.println("AT");  //Once the handshake test is successful, it will back to OK
  updateSerial();

  mySerial.println("AT+CMGF=1");  // Configuring TEXT mode
  updateSerial();
  mySerial.println("AT+CMGS=\"+94774688266\"");  //change ZZ with country code and xxxxxxxxxxx with phone number to sms
  updateSerial();
  mySerial.print("Hey there is a visitor");  //text content
  updateSerial();
  mySerial.write(26);
}

void updateSerial() {
  delay(500);
  while (Serial.available()) {
    mySerial.write(Serial.read());  //Forward what Serial received to Software Serial Port
  }
  while (mySerial.available()) {
    Serial.write(mySerial.read());  //Forward what Software Serial received to Serial Port
  }
}

void pir_init()
{
  pinMode(led, OUTPUT);      // initalize LED as an output
  pinMode(sensor, INPUT);
}

void pir()
{
   val = digitalRead(sensor);  // read sensor value
  if (val == HIGH) {          // check if the sensor is HIGH
  digitalWrite(led, HIGH);  // turn LED ON
  delay(500);               // delay 100 milliseconds

  if (state == LOW) {
    Serial.println("Motion detected!");
    state = HIGH;  // update variable state to HIGH
    gsm();
    buzzer_on();
  }
} else {
  digitalWrite(led, LOW);  // turn LED OFF
  delay(500);              // delay 200 milliseconds

  if (state == HIGH) {
    Serial.println("Motion stopped!");
    state = LOW;  // update variable state to LOW
  }
}
}

void ldr_init()
{
  pinMode(ledPin, OUTPUT);
  pinMode(ldrPin, INPUT);
}

void buzzer_init()
{
  pinMode(buzzer, OUTPUT); 
}

void buzzer_on()
{
  tone(buzzer, 1000); // Send 1KHz sound signal...
  delay(1000);        // ...for 1 sec
  noTone(buzzer);     // Stop sound...
  delay(1000); 
}
